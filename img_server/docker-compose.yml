services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - default
    ports:
      - "27017:27017"

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./data/redis:/data
    networks:
      - default
    ports:
      - "6379:6379"

  # minio:
  #   image: minio/minio
  #   container_name: minio
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/minio:/data
  #   networks:
  #     - default
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  #   command: server --console-address ":9001" /data

  # celery-worker:
  #   build: .
  #   container_name: celery-worker
  #   restart: unless-stopped
  #   command: celery -A app.tasks worker --beat -l INFO
  #   environment:
  #     - MONGODB_URI=mongodb://mongodb:27017
  #     - MINIO_URL=http://minio:9000
  #     - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
  #     - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
  #   depends_on:
  #     - redis

  # img_server:
  #   build: .
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - mongodb
  #     - redis
  #     - minio

networks:
  default:
    name: img_server_network